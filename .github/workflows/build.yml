name: TestCharms
  
on: pull_request
jobs:
  build-charms:
    name: "build charms"
    runs-on: "ubuntu-latest"
    steps:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: lint
        uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'
      - uses: actions/checkout@v1
      - name: install juju
        run: | 
          sudo snap install juju --classic
      - name: Install charmcraft
        run: |
          pip install charmcraft
      - name: pull controller credentials
        run: |
          aws s3 cp s3://omnivector-cicd/juju-local/juju-local.tar.gz .
          tar -xzvf juju-local.tar.gz
          echo "JUJU_DATA=/home/runner/work/rev2/rev2/.local/share/juju" >> $GITHUB_ENV
      - name: contact controller
        run: |
          echo ${{secrets.JUJU_CIRCLECI_USER_PASSWORD}} | juju login --user circleci
      - name: Build charms
        run: |
          make charms
      - name: pull classic snap
        run: |
          wget https://github.com/omnivector-solutions/snap-slurm/releases/download/20.02/slurm_20.02.1_amd64_classic.snap -O slurm.resource
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Another step
        run: |
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"
      - name: add model
        run: |
          juju add-model git-${{ steps.vars.outputs.sha_short }}-bionic
          juju add-space -m git-${{ steps.vars.outputs.sha_short }} nat 172.31.90.0/24 172.31.91.0/24 172.31.92.0/24 172.31.93.0/24
          juju model-config logging-config="<root>=DEBUG;juju.worker.dependency=CRITICAL;unit=DEBUG"
      - name: check status
        run: |
          juju status

      - name: delete model
        run: |
          juju destroy-model --force -y git-${{ steps.vars.outputs.sha_short }}-bionic
